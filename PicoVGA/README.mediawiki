= PicoVGA - VGA display on Raspberry Pico =

= Hardware =

== Land Boards PicoVGA01 Card ==

<img src="http://land-boards.com/blwiki/images/5/56/PicoVGA01_P1080468-720px.jpg"></img>

* [http://land-boards.com/blwiki/index.php?title=PicoVGA01 PicoVGA01 Wiki page]
* VGA (3:3:2)
* Joystick (DB-9M) or [http://land-boards.com/blwiki/index.php?title=JOYPAD JOYPAD]
* Mono Audio (3.5mm to amplified stereo speaker)
* 5V (USB B)
* Fits into standard 100x76mm extruded Aluminum enclosure

== JOYPAD ==

* [http://land-boards.com/blwiki/index.php?title=JOYPAD JOYPAD]
** Configured as Atari JoyStick
* DB-9 Male to Female cable (wired 1:1)

<img src="http://land-boards.com/blwiki/images/a/aa/PicoVGA_JOYPAD_P18499-720px.jpg"></img>

= Credits =

Miroslav Nemecek is the original author of PicoVGA, [panda38.sweb.cz], Panda38@seznam.cz. His [https://github.com/Panda381/PicoVGA PicoVGA Source GitHub] page. His [http://www.breatharian.eu/hw/picovga/index_en.html PicoVGA project web page].

= How to install =

* Install C/C++ SDK
** [https://shawnhymel.com/2096/how-to-set-up-raspberry-pi-pico-c-c-toolchain-on-windows-with-vs-code/ SDK Easier Install] - working following instructions and comments after...
* Unpack this package into some folder
* If you have gcc compiler installed in another folder, edit PATH in files _c1.bat and _boot2\c.bat
* Miroslav Nemecek recommends FAR Manager as program editor - it contains very useful console output.
* To compile demo project, run c.bat (or c_all.bat to compile all).
* To clear demo project, run d.bat (or d_all.bat to clear all).
* To write demo project to the Pico board:
** Press and hold BOOTSEL button on the Pico board
** Connect USB cable
** Release BOOTSEL button
** Edit destination drive (now there is r:) in file _e1.bat, command:
*** Copy /b program.uf2 r:
** and then run e.bat 
** or drag and drop file 'program.uf2' to Pico drive.

== How to connect Pico to PC with serial port ==

* Most demo projects are prepared to control via USB serial port adapter.
* USB interface is selected in Makefile with this parameter:
<pre>
DEFINE += -DPICO_STDIO_USB=1
</pre>

* Instead of it, you can use serial port. Change Makefile parameter to:
<pre>
DEFINE += -DPICO_STDIO_UART=1
</pre>

* To connect Pico to PC via serial port, you need either convertor from RS232 COM port from 3.3V levels of Pico board, or you need convertor to USB port. 
  Good choise is USB-serial adaptor PL2303TA.
* How to connect UART to Pico:

<pre>
                    +---USB---+
   <-- UART0_TX GP0 |.1    40.|VBUS --- +5V power output to USB device
   --> UART0_RX GP1 |.2    39.|VSYS ---|<|--- +5V power input
   ---          GND |.3    38.| GND  K diode A
                GP2 |.4    37.| 3V3_EN
                GP3 |.5    36.| 3V3_OUT
                      ......
</pre>

* Note: in simple case, you need not diode, you can connect +5V directly on board.
* connect USB/UART adaptor PL2303TA:

<pre>
       red ......... +5V VSYS (39)
       black ....... GND (3)
       white RxD ... UART0_TX GP0 (1)
       green TxD ... UART0_RX GP1 (2)
</pre>

* You need console program (as PuTTY) to see demo text.
* Setup port to 115200 Baud, 8 bits, 1 stop bit, no parity, flow control None.
* In Device Manager, USB adaptor can be found under name:
** "Prolific USB-to-Serial Comm Port (COM10)".
* Non JoyStick and non-[[JOYPAD]] version of the programs
* Some JoyStick and non-[[JOYPAD]] programs use the USB Serial interface for additional functions

= PicoVGA examples =

* ProgramsJP = My JOYPAD version of the programs
* ProgramsJS = My JoyStick version of the programs

<pre>
Ants - card game
       keyboard control: 'J' left, 'L' right, space select, 'D' discard, 'H' help, 'Q' quit

AntsJP - card game
         JoyPad control: left, right, centerFire=select, upperLeft=discard, Fire=help move, upperRight=quit
	
AntsJS - card game
         JoyStick control: left, right, Up=select, down=discard, 'H'=help move, Fire=quit

Balloons - sprite demo, floating balloons

Draw - draw graphics demo

Earth - rotating Earth globe

Eggs - game of Eggs+Chickens+Hens, variant of the Reversi game
       keyboard control: 'L' right, 'I' up, 'J' left, 'K' down, 'H' help, 'Q' quit, 'P' 2 players, 'D' demo, space stone, Enter ok

EggsJP - game of Eggs+Chickens+Hens, variant of the Reversi game
         JoyPad control: right, up, left, down, fire=help, upperRight=quit, centerFire=stone, upperLeft=ok
         keyboard control: 'P' 2 players, 'D' demo

EggsJS - game of Eggs+Chickens+Hens, variant of the Reversi game
         JoyStick control: right, up, left, down, Fire=stone
         keyboard control: 'H'=help, Enter=ok, 'Q'=quit, 'P' 2 players, 'D' demo

Fifteen - game
          keyboard control: 'L' right, 'I' up, 'J' left, 'K' down, 'Q' new game

FifteenJP - game
            JoyPad control: right, up, left, down, upperRight=new game

FifteenJS - game
            JoyStick control: right, up, left, down, Fire=new game

Flag - animation of flag fluttering in the wind

Ghost Racing - car racing game, racing with player's ghost copy, demonstration of 3D perspective projection
               keyboard control: 'I' gear up, 'K' gear down, 'J' turn left, 'L' turn right

Ghost RacingJP - car racing game, racing with player's ghost copy, demonstration of 3D perspective projection
                 JoyPad control: up=shift gear up, down=shift gear down, left=turn left, right=turn right

Ghost RacingJS - car racing game, racing with player's ghost copy, demonstration of 3D perspective projection
                 JoyStick control: up=shift gear up, down=shift gear down, left=turn left, right=turn right

Ginger House - picture fairy tale book
               keyboard control: 'J' previous page, 'L' next page

Ginger HouseJP - picture fairy tale book
                 JoyPad control: left=previous page, right=next page

Ginger HouseJS - picture fairy tale book
                 JoyStick control: left=previous page, right=next page

Hello - simple demonstration, print text "Hello world!" on the screen

Hypno - hypnotizing rotating pattern

Level Meter - demo of music volume level indication

Life - game, reproducing cells
       keyboard control: 'L' right, 'I' up, 'J' left, 'K' down, 'C' copy, 'V' paste, 'D' clear,
       space flip state, Enter run life, 0..9 select slot

LifeJP - game, reproducing cells
         JoyPad control: right=right, up=up, left=left, dowb=down, upperLeft=copy, Fire=paste, centerFire=flip state, 
         UpperRight=run life
	 keyboard control: 'D' clear, 0..9 select slot

LifeJS - game, reproducing cells
         JoyStick control: right=right, up=up, left=left, dowb=down, Fire=flip state, 
         keyboard control: 'D' clear, 0..9 select slot, 'C'=copy, 'V'=paste, Enter=run life

Lines - moving line patterns

Mandelbrot - fractal pattern generator
             keyboard control: 'E' up, 'S' left, 'D' right, 'X' down, 'Q' zoom in, 'A' zoom out,
             'L' low resolution 132x100, 'M' medium resolution 264x200, 'H' high resolution 528x400,
             'I' integer arithmetics, 'F' float arithmetics, 'B' double arithmetics,
             'O' decrease number of steps, 'P' increase number of steps, 'U' increase system clock,
             'T' decrease system clock, space redraw

MandelbrotJP - fractal pattern generator
               JoyPad control: Up, left, right, down, Fire zoom in, upper left zoom out,
               keyboard control: 'L' low resolution 132x100, 'M' medium resolution 264x200, 'H' high resolution 528x400,
              'I' integer arithmetics, 'F' float arithmetics, 'B' double arithmetics,
              'O' decrease number of steps, 'P' increase number of steps, 'U' increase system clock,
              'T' decrease system clock, space redraw

MandelbrotJS - fractal pattern generator
               JoyStick control: Up, left, right, down, Fire zoom in 
               keyboard control: 'A' zoom out,
               'L' low resolution 132x100, 'M' medium resolution 264x200, 'H' high resolution 528x400,
               'I' integer arithmetics, 'F' float arithmetics, 'B' double arithmetics,
               'O' decrease number of steps, 'P' increase number of steps, 'U' increase system clock,
               'T' decrease system clock, space redraw

Matrix Rain - simulation of Matrix code rain

Maze - game, simple maze with maze generator
       keyboard control: 'J' left, 'I' up, 'L' right, 'K' down, 'H' help (show door)

MazeJP - game, simple maze with maze generator
         JoyPad control: left, up, right, down, upperRight=help (show door)

MazeJS - game, simple maze with maze generator
         JoyStick control: left, up, right, down, Fire=help (show door)

Monoscope - test of various graphic modes
            keyboard control: '0'..'9', 'A'..'U' select videomode

Oscilloscope - demo oscilloscope simulator

Pacman - game of popular Pac-man
         keyboard control: 'J' left, 'I' up, 'L' right, 'K' down, 'A' pause

PacmanJP - game of popular Pac-man
           JoyPad control: left, up, right, down, upper right pause

PacmanJS - game of popular Pac-man
           JoyStick control: left, up, right, down, Fire=pause

Pi - calculate Pi at 4800 digits

Pixels - random pixels

Raytrace - ray tracing 3D demonstration of mirror spheres

Sokoban - game with 3000 puzzles and with their solutions
          keyboard control: 'L' right, 'I' up, 'J' left, 'K' down, 'H' help (solution),
          'R' restart scene, 'Q' previous level, 'W' next level, 'P' info

SokobanJP - game with 3000 puzzles and with their solutions
            JoyPad control: right, up, left, down, upperLeft=previous level, fire=next level, uppperRight=restart scene, 
            keyboard 'H' help (solution), 'P' info

SokobanJS - game with 3000 puzzles and with their solutions
            JoyStick control: right, up, left, down, Fire=restart scene, 
            'Q' previous level, 'W' next level, 'P' info
            keyboard 'H' help (solution), 'P' info

Spheres - draw random spheres

Spots - draw random dot spots

Tetris - game
         keyboard control: 'L' right, 'I' turn, 'J' left, 'K' drop, 'A' pause

TetrisJP - game
           JoyPad control: right, center fire turn, left, down = drop, upper right = pause

TetrisJS - game
           JoyStick control: right, up turn, left, down = drop, Fire = pause

Train - puzzle game with 50 levels and with their solutions
        keyboard control: 'L' right, 'I' up, 'J' left, 'K' down, 'H' help (solution), Enter OK, Esc escape, BS backspace

TrainJP - puzzle game with 50 levels and with their solutions
          JoyPad control: right, up, left, down, centerFire=OK, upperLeft=escape, fire=backspace, upperRight=help (solution), 

TrainJS - puzzle game with 50 levels and with their solutions
          JoyStick control: right, up, left, down, Fire=OK, 
          Esc=escape, BS=backspace, 'H'=help (solution), 

Twister - deformable block covered with 4 textures

Water surface - simulation of a rippling water surface
</pre>

= Our Prototype Hardware Build =

<img src="http://land-boards.com/blwiki/images/6/66/PicoVGA_P1080432-720px.jpg"></img>

Uses Land Boards cards

* [http://land-boards.com/blwiki/index.php?title=PicoVGA01#Prototype_Build_Hardware Raspberry Pi Pico Breakout Board]
* [http://land-boards.com/blwiki/index.php?title=Raspberry_Pi_Pico Raspberry Pi Pico]
* [http://land-boards.com/blwiki/index.php?title=VGAX49 VGAX49 Card]
* [http://land-boards.com/blwiki/index.php?title=Raspberry_Pi_Pico_MM_BASIC_Build#GRID49_-_Audio_Filter Audio Filter Card]
* [http://land-boards.com/blwiki/index.php?title=JOYPAD JOYPAD Card]
