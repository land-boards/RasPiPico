// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --- //
// vga //
// --- //

#define vga_wrap_target 10
#define vga_wrap 14

#define vga_offset_sync 0u
#define vga_offset_entry 2u
#define vga_offset_dark 3u
#define vga_offset_irqset 7u
#define vga_offset_output 11u
#define vga_offset_extra1 12u
#define vga_offset_extra2 14u

static const uint16_t vga_program_instructions[] = {
    0x703b, //  0: out    x, 27           side 1     
    0x1041, //  1: jmp    x--, 1          side 1     
    0x70a5, //  2: out    pc, 5           side 1     
    0x6033, //  3: out    x, 19           side 0     
    0x6008, //  4: out    pins, 8         side 0     
    0x0045, //  5: jmp    x--, 5          side 0     
    0x60a5, //  6: out    pc, 5           side 0     
    0xc044, //  7: irq    clear 4         side 0     
    0x607b, //  8: out    null, 27        side 0     
    0xc504, //  9: irq    nowait 4        side 0 [5] 
            //     .wrap_target
    0x60a5, // 10: out    pc, 5           side 0     
    0x603b, // 11: out    x, 27           side 0     
    0x6008, // 12: out    pins, 8         side 0     
    0x004c, // 13: jmp    x--, 12         side 0     
    0x6008, // 14: out    pins, 8         side 0     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program vga_program = {
    .instructions = vga_program_instructions,
    .length = 15,
    .origin = 17,
};

static inline pio_sm_config vga_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + vga_wrap_target, offset + vga_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}
#endif

// -------- //
// keylayer //
// -------- //

#define keylayer_wrap_target 0
#define keylayer_wrap 12

#define keylayer_offset_idle 0u
#define keylayer_offset_entry 1u
#define keylayer_offset_extra1 11u

static const uint16_t keylayer_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0x2044, //  1: wait   0 irq, 4                   
    0x602d, //  2: out    x, 13                      
    0x0043, //  3: jmp    x--, 3                     
    0x6048, //  4: out    y, 8                       
    0x602b, //  5: out    x, 11                      
    0xa0c1, //  6: mov    isr, x                     
    0x6028, //  7: out    x, 8                       
    0x00aa, //  8: jmp    x != y, 10                 
    0x000b, //  9: jmp    11                         
    0xa001, // 10: mov    pins, x                    
    0xa026, // 11: mov    x, isr                     
    0x0046, // 12: jmp    x--, 6                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program keylayer_program = {
    .instructions = keylayer_program_instructions,
    .length = 13,
    .origin = 0,
};

static inline pio_sm_config keylayer_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + keylayer_wrap_target, offset + keylayer_wrap);
    return c;
}
#endif

// ---------- //
// blacklayer //
// ---------- //

#define blacklayer_wrap_target 0
#define blacklayer_wrap 10

#define blacklayer_offset_idle 0u
#define blacklayer_offset_entry 1u
#define blacklayer_offset_extra1 8u
#define blacklayer_offset_extra2 10u

static const uint16_t blacklayer_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0x2044, //  1: wait   0 irq, 4                   
    0x6030, //  2: out    x, 16                      
    0x0043, //  3: jmp    x--, 3                     
    0x6030, //  4: out    x, 16                      
    0x6048, //  5: out    y, 8                       
    0x006a, //  6: jmp    !y, 10                     
    0xa002, //  7: mov    pins, y                    
    0x0045, //  8: jmp    x--, 5                     
    0x0000, //  9: jmp    0                          
    0x0045, // 10: jmp    x--, 5                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program blacklayer_program = {
    .instructions = blacklayer_program_instructions,
    .length = 11,
    .origin = 0,
};

static inline pio_sm_config blacklayer_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + blacklayer_wrap_target, offset + blacklayer_wrap);
    return c;
}
#endif

// ---------- //
// whitelayer //
// ---------- //

#define whitelayer_wrap_target 0
#define whitelayer_wrap 9

#define whitelayer_offset_idle 0u
#define whitelayer_offset_entry 1u
#define whitelayer_offset_extra1 9u

static const uint16_t whitelayer_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0x2044, //  1: wait   0 irq, 4                   
    0x6030, //  2: out    x, 16                      
    0x0043, //  3: jmp    x--, 3                     
    0x6030, //  4: out    x, 16                      
    0x6048, //  5: out    y, 8                       
    0x0088, //  6: jmp    y--, 8                     
    0x0009, //  7: jmp    9                          
    0xa002, //  8: mov    pins, y                    
    0x0045, //  9: jmp    x--, 5                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program whitelayer_program = {
    .instructions = whitelayer_program_instructions,
    .length = 10,
    .origin = 0,
};

static inline pio_sm_config whitelayer_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + whitelayer_wrap_target, offset + whitelayer_wrap);
    return c;
}
#endif

// --------- //
// monolayer //
// --------- //

#define monolayer_wrap_target 0
#define monolayer_wrap 15

#define monolayer_offset_idle 0u
#define monolayer_offset_entry 1u
#define monolayer_offset_extra1 12u
#define monolayer_offset_extra2 15u

static const uint16_t monolayer_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0x2044, //  1: wait   0 irq, 4                   
    0x602c, //  2: out    x, 12                      
    0x0043, //  3: jmp    x--, 3                     
    0x60c8, //  4: out    isr, 8                     
    0x604b, //  5: out    y, 11                      
    0x6021, //  6: out    x, 1                       
    0x002e, //  7: jmp    !x, 14                     
    0x6021, //  8: out    x, 1                       
    0x002b, //  9: jmp    !x, 11                     
    0x000c, // 10: jmp    12                         
    0xa006, // 11: mov    pins, isr                  
    0x0088, // 12: jmp    y--, 8                     
    0x0000, // 13: jmp    0                          
    0x6008, // 14: out    pins, 8                    
    0x008e, // 15: jmp    y--, 14                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program monolayer_program = {
    .instructions = monolayer_program_instructions,
    .length = 16,
    .origin = 0,
};

static inline pio_sm_config monolayer_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + monolayer_wrap_target, offset + monolayer_wrap);
    return c;
}
#endif

// -------- //
// rlelayer //
// -------- //

#define rlelayer_wrap_target 12
#define rlelayer_wrap 16

#define rlelayer_offset_idle 0u
#define rlelayer_offset_entry 1u
#define rlelayer_offset_skip 5u
#define rlelayer_offset_extra1 5u
#define rlelayer_offset_skip1 6u
#define rlelayer_offset_extra2 6u
#define rlelayer_offset_run 7u
#define rlelayer_offset_extra3 7u
#define rlelayer_offset_extra4 9u
#define rlelayer_offset_raw1 11u
#define rlelayer_offset_extra5 11u
#define rlelayer_offset_raw 14u
#define rlelayer_offset_extra6 14u
#define rlelayer_offset_extra7 16u

static const uint16_t rlelayer_program_instructions[] = {
    0x60a8, //  0: out    pc, 8                      
    0x2044, //  1: wait   0 irq, 4                   
    0x6220, //  2: out    x, 32                  [2] 
    0x0043, //  3: jmp    x--, 3                     
    0x000c, //  4: jmp    12                         
    0x0045, //  5: jmp    x--, 5                     
    0x000c, //  6: jmp    12                         
    0xa001, //  7: mov    pins, x                    
    0x6048, //  8: out    y, 8                       
    0xa001, //  9: mov    pins, x                    
    0x0089, // 10: jmp    y--, 9                     
    0xa001, // 11: mov    pins, x                    
            //     .wrap_target
    0x6028, // 12: out    x, 8                       
    0x60a8, // 13: out    pc, 8                      
    0x6008, // 14: out    pins, 8                    
    0x004e, // 15: jmp    x--, 14                    
    0x6008, // 16: out    pins, 8                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program rlelayer_program = {
    .instructions = rlelayer_program_instructions,
    .length = 17,
    .origin = 0,
};

static inline pio_sm_config rlelayer_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + rlelayer_wrap_target, offset + rlelayer_wrap);
    return c;
}
#endif

