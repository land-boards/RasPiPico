name	location	description	type	advanced	default	depends	group	max	min
PARAM_ASSERTIONS_DISABLE_ALL	src/common/pico_base/include/pico/assert.h:22	Global assert disable	bool		0		pico_base		
PARAM_ASSERTIONS_ENABLED_ADC	src/rp2_common/hardware_adc/include/hardware/adc.h:47	Enable/disable assertions in the ADC module	bool		0		hardware_adc		
PARAM_ASSERTIONS_ENABLED_ADDRESS_ALIAS	src/rp2_common/hardware_base/include/hardware/address_mapped.h:58	Enable/disable assertions in memory address aliasing macros	bool		0		hardware_base		
PARAM_ASSERTIONS_ENABLED_CLOCKS	src/rp2_common/hardware_clocks/include/hardware/clocks.h:92	Enable/disable assertions in the clocks module	bool		0		hardware_clocks		
PARAM_ASSERTIONS_ENABLED_DMA	src/rp2_common/hardware_dma/include/hardware/dma.h:44	Enable/disable DMA assertions	bool		0		hardware_dma		
PARAM_ASSERTIONS_ENABLED_EXCEPTION	src/rp2_common/hardware_exception/include/hardware/exception.h:27	Enable/disable assertions in the exception module	bool		0		hardware_exception		
PARAM_ASSERTIONS_ENABLED_FLASH	src/rp2_common/hardware_flash/include/hardware/flash.h:36	Enable/disable assertions in the flash module	bool		0		hardware_flash		
PARAM_ASSERTIONS_ENABLED_GPIO	src/rp2_common/hardware_gpio/include/hardware/gpio.h:18	Enable/disable assertions in the GPIO module	bool		0		hardware_gpio		
PARAM_ASSERTIONS_ENABLED_I2C	src/rp2_common/hardware_i2c/include/hardware/i2c.h:15	Enable/disable assertions in the I2C module	bool		0		hardware_i2c		
PARAM_ASSERTIONS_ENABLED_INTERP	src/rp2_common/hardware_interp/include/hardware/interp.h:14	Enable/disable assertions in the interpolation module	bool		0		hardware_interp		
PARAM_ASSERTIONS_ENABLED_IRQ	src/rp2_common/hardware_irq/include/hardware/irq.h:106	Enable/disable assertions in the IRQ module	bool		0		hardware_irq		
PARAM_ASSERTIONS_ENABLED_LOCK_CORE	src/common/pico_sync/include/pico/lock_core.h:41	Enable/disable assertions in the lock core	bool		0		pico_sync		
PARAM_ASSERTIONS_ENABLED_PHEAP	src/common/pico_util/include/pico/util/pheap.h:16	Enable/disable assertions in the pheap module	bool		0		pico_util		
PARAM_ASSERTIONS_ENABLED_PIO	src/rp2_common/hardware_pio/include/hardware/pio.h:17	Enable/disable assertions in the PIO module	bool		0		hardware_pio		
PARAM_ASSERTIONS_ENABLED_PIO_INSTRUCTIONS	src/rp2_common/hardware_pio/include/hardware/pio_instructions.h:23	Enable/disable assertions in the PIO instructions	bool		0		pio_instructions		
PARAM_ASSERTIONS_ENABLED_PWM	src/rp2_common/hardware_pwm/include/hardware/pwm.h:18	Enable/disable assertions in the PWM module	bool		0		hardware_pwm		
PARAM_ASSERTIONS_ENABLED_SPI	src/rp2_common/hardware_spi/include/hardware/spi.h:15	Enable/disable assertions in the SPI module	bool		0		hardware_spi		
PARAM_ASSERTIONS_ENABLED_SYNC	src/rp2_common/hardware_sync/include/hardware/sync.h:48	Enable/disable assertions in the HW sync module	bool		0		hardware_sync		
PARAM_ASSERTIONS_ENABLED_TIME	src/common/pico_time/include/pico/time.h:32	Enable/disable assertions in the time module	bool		0		pico_time		
PARAM_ASSERTIONS_ENABLED_TIMER	src/rp2_common/hardware_timer/include/hardware/timer.h:48	Enable/disable assertions in the timer module	bool		0		hardware_timer		
PARAM_ASSERTIONS_ENABLED_UART	src/rp2_common/hardware_uart/include/hardware/uart.h:14	Enable/disable assertions in the UART module	bool		0		hardware_uart		
PARAM_ASSERTIONS_ENABLE_ALL	src/common/pico_base/include/pico/assert.h:21	Global assert enable	bool		0		pico_base		
PICO_BOOTSEL_VIA_DOUBLE_RESET_ACTIVITY_LED	src/rp2_common/pico_bootsel_via_double_reset/pico_bootsel_via_double_reset.c:17	Optionally define a pin to use as bootloader activity LED when BOOTSEL mode is entered via reset double tap	int				pico_bootsel_via_double_reset	29	0
PICO_BOOTSEL_VIA_DOUBLE_RESET_INTERFACE_DISABLE_MASK	src/rp2_common/pico_bootsel_via_double_reset/pico_bootsel_via_double_reset.c:19	Optionally disable either the mass storage interface (bit 0) or the PICOBOOT interface (bit 1) when entering BOOTSEL mode via double reset	int		0		pico_bootsel_via_double_reset	3	0
PICO_BOOTSEL_VIA_DOUBLE_RESET_TIMEOUT_MS	src/rp2_common/pico_bootsel_via_double_reset/pico_bootsel_via_double_reset.c:12	Window of opportunity for a second press of a reset button to enter BOOTSEL mode (milliseconds)	int		200		pico_bootsel_via_double_reset		
PICO_BOOT_STAGE2_CHOOSE_AT25SF128A	src/rp2_common/boot_stage2/include/boot_stage2/config.h:47	Select boot2_at25sf128a as the boot stage 2 when no boot stage 2 selection is made by the CMake build	bool		0		boot_stage2		
PICO_BOOT_STAGE2_CHOOSE_GENERIC_03H	src/rp2_common/boot_stage2/include/boot_stage2/config.h:57	Select boot2_generic_03h as the boot stage 2 when no boot stage 2 selection is made by the CMake build	bool		1		boot_stage2		
PICO_BOOT_STAGE2_CHOOSE_IS25LP080	src/rp2_common/boot_stage2/include/boot_stage2/config.h:20	Select boot2_is25lp080 as the boot stage 2 when no boot stage 2 selection is made by the CMake build	bool		0		boot_stage2		
PICO_BOOT_STAGE2_CHOOSE_W25Q080	src/rp2_common/boot_stage2/include/boot_stage2/config.h:29	Select boot2_w25q080 as the boot stage 2 when no boot stage 2 selection is made by the CMake build	bool		0		boot_stage2		
PICO_BOOT_STAGE2_CHOOSE_W25X10CL	src/rp2_common/boot_stage2/include/boot_stage2/config.h:38	Select boot2_w25x10cl as the boot stage 2 when no boot stage 2 selection is made by the CMake build	bool		0		boot_stage2		
PICO_BUILD_BOOT_STAGE2_NAME	src/rp2_common/boot_stage2/include/boot_stage2/config.h:14	The name of the boot stage 2 if selected by the build					boot_stage2		
PICO_CMSIS_RENAME_EXCEPTIONS	src/rp2_common/cmsis/include/cmsis/rename_exceptions.h:11	Whether to rename SDK exceptions such as isr_nmi to their CMSIS equivalent i.e. NMI_Handler	bool		1		cmsis_core		
PICO_CORE1_STACK_SIZE	src/rp2_common/pico_multicore/include/pico/multicore.h:27	Stack size for core 1			PICO_STACK_SIZE (0x800)		pico_multicore	0x10000	0x100
PICO_DEBUG_MALLOC	src/rp2_common/pico_malloc/include/pico/malloc.h:28	Enable/disable debug printf from malloc	bool		0		pico_malloc		
PICO_DEBUG_MALLOC_LOW_WATER	src/rp2_common/pico_malloc/include/pico/malloc.h:33	Define the lower bound for allocation addresses to be printed by PICO_DEBUG_MALLOC			0		pico_malloc		0
PICO_DEBUG_PIN_BASE	src/rp2_common/hardware_gpio/include/hardware/gpio.h:627	First pin to use for debug output (if enabled)			19		hardware_gpio	28	0
PICO_DEBUG_PIN_COUNT	src/rp2_common/hardware_gpio/include/hardware/gpio.h:632	Number of pins to use for debug output (if enabled)			3		hardware_gpio	28	1
PICO_DEFAULT_I2C	src/rp2_common/hardware_i2c/include/hardware/i2c.h:54	Define the default I2C for a board					hardware_i2c	1	0
PICO_DEFAULT_I2C_SCL_PIN	src/rp2_common/hardware_i2c/include/hardware/i2c.h:56	Define the default I2C SCL pin					hardware_i2c	29	0
PICO_DEFAULT_I2C_SDA_PIN	src/rp2_common/hardware_i2c/include/hardware/i2c.h:55	Define the default I2C SDA pin					hardware_i2c	29	0
PICO_DEFAULT_IRQ_PRIORITY	src/rp2_common/hardware_irq/include/hardware/irq.h:93	Define the default IRQ priority			0x80		hardware_irq		
PICO_DEFAULT_LED_PIN	src/common/pico_stdlib/include/pico/stdlib.h:59	Optionally define a pin that drives a regular LED on the board					pico_stdlib		
PICO_DEFAULT_LED_PIN_INVERTED	src/common/pico_stdlib/include/pico/stdlib.h:61	1 if LED is inverted or 0 if not	int		0		pico_stdlib		
PICO_DEFAULT_SPI	src/rp2_common/hardware_spi/include/hardware/spi.h:39	Define the default SPI for a board					hardware_spi	1	0
PICO_DEFAULT_SPI_CSN_PIN	src/rp2_common/hardware_spi/include/hardware/spi.h:43	Define the default SPI CSN pin					hardware_spi	29	0
PICO_DEFAULT_SPI_RX_PIN	src/rp2_common/hardware_spi/include/hardware/spi.h:42	Define the default SPI RX pin					hardware_spi	29	0
PICO_DEFAULT_SPI_SCK_PIN	src/rp2_common/hardware_spi/include/hardware/spi.h:40	Define the default SPI SCK pin					hardware_spi	29	0
PICO_DEFAULT_SPI_TX_PIN	src/rp2_common/hardware_spi/include/hardware/spi.h:41	Define the default SPI TX pin					hardware_spi	29	0
PICO_DEFAULT_UART	src/rp2_common/hardware_uart/include/hardware/uart.h:33	Define the default UART used for printf etc					hardware_uart	1	0
PICO_DEFAULT_UART_BAUD_RATE	src/rp2_common/hardware_uart/include/hardware/uart.h:37	Define the default UART baudrate			115200		hardware_uart	921600	
PICO_DEFAULT_UART_RX_PIN	src/rp2_common/hardware_uart/include/hardware/uart.h:35	Define the default UART RX pin					hardware_uart	29	0
PICO_DEFAULT_UART_TX_PIN	src/rp2_common/hardware_uart/include/hardware/uart.h:34	Define the default UART TX pin					hardware_uart	29	0
PICO_DEFAULT_WS2812_PIN	src/common/pico_stdlib/include/pico/stdlib.h:66	Optionally define a pin that controls data to a WS2812 compatible LED on the board					pico_stdlib		
PICO_DEFAULT_WS2812_POWER_PIN	src/common/pico_stdlib/include/pico/stdlib.h:67	Optionally define a pin that controls power to a WS2812 compatible LED on the board					pico_stdlib		
PICO_DISABLE_SHARED_IRQ_HANDLERS	src/rp2_common/hardware_irq/include/hardware/irq.h:16	Disable shared IRQ handlers	bool		0		hardware_irq		
PICO_DOUBLE_SUPPORT_ROM_V1	src/rp2_common/pico_platform/include/pico/platform.h:49	Include double support code for RP2040 B0 when that chip revision is supported 	bool	true	1		pico_platform		
PICO_FLASH_SIZE_BYTES	src/rp2_common/hardware_flash/include/hardware/flash.h:47	size of primary flash in bytes	int				hardware_flash		
PICO_FLOAT_SUPPORT_ROM_V1	src/rp2_common/pico_platform/include/pico/platform.h:44	Include float support code for RP2040 B0 when that chip revision is supported 	bool	true	1		pico_platform		
PICO_HEAP_SIZE	src/rp2_common/pico_platform/include/pico/platform.h:29	Heap size to reserve		true	0x800		pico_platform		0x100
PICO_MALLOC_PANIC	src/rp2_common/pico_malloc/include/pico/malloc.h:23	Enable/disable panic when an allocation failure occurs	bool		1		pico_malloc		
PICO_MAX_SHARED_IRQ_HANDLERS	src/rp2_common/hardware_irq/include/hardware/irq.h:11	Maximum number of shared IRQ handlers		true	4		hardware_irq		
PICO_NO_FPGA_CHECK	src/rp2_common/pico_platform/include/pico/platform.h:315	Remove the FPGA platform check for small code size reduction	bool	true	0		pico_runtime		
PICO_NO_RAM_VECTOR_TABLE	src/rp2_common/pico_platform/include/pico/platform.h:34	Enable/disable the RAM vector table	bool	true	0		pico_platform		
PICO_PANIC_FUNCTION	src/rp2_common/pico_runtime/runtime.c:237	Name of a function to use in place of the stock panic function or empty string to simply breakpoint on panic					pico_runtime		
PICO_PHEAP_MAX_ENTRIES	src/common/pico_util/include/pico/util/pheap.h:38	Maximum number of entries in the pheap			255		pico_util	65534	1
PICO_PRINTF_ALWAYS_INCLUDED	src/rp2_common/pico_printf/include/pico/printf.h:49	Whether to always include printf code even if only called weakly (by panic)	bool		1 in debug build 0 otherwise		pico_printf		
PICO_PRINTF_DEFAULT_FLOAT_PRECISION	src/rp2_common/pico_printf/printf.c:66	Define default floating point precision			6		pico_printf	16	1
PICO_PRINTF_FTOA_BUFFER_SIZE	src/rp2_common/pico_printf/printf.c:47	Define printf ftoa buffer size			32		pico_printf	128	0
PICO_PRINTF_MAX_FLOAT	src/rp2_common/pico_printf/printf.c:71	Define the largest float suitable to print with %f			1e9		pico_printf	1e9	1
PICO_PRINTF_NTOA_BUFFER_SIZE	src/rp2_common/pico_printf/printf.c:40	Define printf ntoa buffer size			32		pico_printf	128	0
PICO_PRINTF_SUPPORT_EXPONENTIAL	src/rp2_common/pico_printf/printf.c:60	Enable exponential floating point printing	bool		1		pico_printf		
PICO_PRINTF_SUPPORT_FLOAT	src/rp2_common/pico_printf/printf.c:54	Enable floating point printing	bool		1		pico_printf		
PICO_PRINTF_SUPPORT_LONG_LONG	src/rp2_common/pico_printf/printf.c:76	Enable support for long long types (%llu or %p)	bool		1		pico_printf		
PICO_PRINTF_SUPPORT_PTRDIFF_T	src/rp2_common/pico_printf/printf.c:81	Enable support for the ptrdiff_t type (%t)	bool		1		pico_printf		
PICO_QUEUE_MAX_LEVEL	src/common/pico_util/include/pico/util/queue.h:13	Maintain a field for the highest level that has been reached by a queue	bool	true	0		queue		
PICO_RP2040_B0_SUPPORTED	src/rp2_common/pico_platform/include/pico/platform.h:39	Whether to include any specific software support for RP2040 B0 revision	bool	true	1		pico_platform		
PICO_RP2040_B1_SUPPORTED	src/rp2_common/pico_platform/include/pico/platform.h:55	Whether to include any specific software support for RP2040 B1 revision	bool	true	1		pico_platform		
PICO_RP2040_B2_SUPPORTED	src/rp2_common/pico_platform/include/pico/platform.h:60	Whether to include any specific software support for RP2040 B2 revision	bool	true	1		pico_platform		
PICO_SHARED_IRQ_HANDLER_DEFAULT_ORDER_PRIORITY	src/rp2_common/hardware_irq/include/hardware/irq.h:101	Set default shared IRQ order priority			0x80		hardware_irq		
PICO_SPINLOCK_ID_CLAIM_FREE_FIRST	src/rp2_common/hardware_sync/include/hardware/sync.h:93	Lowest Spinlock ID in the 'claim free' range			24		hardware_sync	31	0
PICO_SPINLOCK_ID_CLAIM_FREE_LAST	src/rp2_common/hardware_sync/include/hardware/sync.h:102	Highest Spinlock ID in the 'claim free' range			31		hardware_sync	31	0
PICO_SPINLOCK_ID_HARDWARE_CLAIM	src/rp2_common/hardware_sync/include/hardware/sync.h:68	Spinlock ID for Hardware claim protection			11		hardware_sync	31	0
PICO_SPINLOCK_ID_IRQ	src/rp2_common/hardware_sync/include/hardware/sync.h:58	Spinlock ID for IRQ protection			9		hardware_sync	31	0
PICO_SPINLOCK_ID_OS1	src/rp2_common/hardware_sync/include/hardware/sync.h:73	First Spinlock ID reserved for use by low level OS style software			14		hardware_sync	31	0
PICO_SPINLOCK_ID_OS2	src/rp2_common/hardware_sync/include/hardware/sync.h:78	Second Spinlock ID reserved for use by low level OS style software			15		hardware_sync	31	0
PICO_SPINLOCK_ID_STRIPED_FIRST	src/rp2_common/hardware_sync/include/hardware/sync.h:83	Lowest Spinlock ID in the 'striped' range			16		hardware_sync	31	0
PICO_SPINLOCK_ID_STRIPED_LAST	src/rp2_common/hardware_sync/include/hardware/sync.h:88	Highest Spinlock ID in the 'striped' range			23		hardware_sync	31	0
PICO_SPINLOCK_ID_TIMER	src/rp2_common/hardware_sync/include/hardware/sync.h:63	Spinlock ID for Timer protection			10		hardware_sync	31	0
PICO_STACK_SIZE	src/rp2_common/pico_platform/include/pico/platform.h:24	Stack Size		true	0x800		pico_platform		0x100
PICO_STDIO_DEFAULT_CRLF	src/rp2_common/pico_stdio/include/pico/stdio.h:29	Default for CR/LF conversion enabled on all stdio outputs	bool		1	PICO_STDIO_ENABLE_CRLF_SUPPORT	pico_stdio		
PICO_STDIO_ENABLE_CRLF_SUPPORT	src/rp2_common/pico_stdio/include/pico/stdio.h:24	Enable/disable CR/LF output conversion support	bool		1		pico_stdio		
PICO_STDIO_SEMIHOSTING_DEFAULT_CRLF	src/rp2_common/pico_stdio_semihosting/include/pico/stdio_semihosting.h:20	Default state of CR/LF translation for semihosting output	bool		PICO_STDIO_DEFAULT_CRLF		pico_stdio_semihosting		
PICO_STDIO_STACK_BUFFER_SIZE	src/rp2_common/pico_stdio/include/pico/stdio.h:34	Define printf buffer size (on stack)... this is just a working buffer not a max output size			128		pico_stdio	512	0
PICO_STDIO_UART_DEFAULT_CRLF	src/rp2_common/pico_stdio_uart/include/pico/stdio_uart.h:21	Default state of CR/LF translation for UART output	bool		PICO_STDIO_DEFAULT_CRLF		pico_stdio_uart		
PICO_STDIO_USB_CONNECT_WAIT_TIMEOUT_MS	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:57	Maximum number of milliseconds to wait during initialization for a CDC connection from the host (negative means indefinite) during initialization			0		pico_stdio_usb		
PICO_STDIO_USB_DEFAULT_CRLF	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:26	Default state of CR/LF translation for USB output	bool		PICO_STDIO_DEFAULT_CRLF		pico_stdio_usb		
PICO_STDIO_USB_ENABLE_RESET_VIA_BAUD_RATE	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:47	Enable/disable resetting into BOOTSEL mode if the host sets the baud rate to a magic value (PICO_STDIO_USB_RESET_MAGIC_BAUD_RATE)	bool		1		pico_stdio_usb		
PICO_STDIO_USB_ENABLE_RESET_VIA_VENDOR_INTERFACE	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:80	Enable/disable resetting into BOOTSEL mode via an additional VENDOR USB interface - enables picotool based reset	bool		1		pico_stdio_usb		
PICO_STDIO_USB_LOW_PRIORITY_IRQ	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:42	low priority (non hardware) IRQ number to claim for tud_task() background execution		true	31		pico_stdio_usb		
PICO_STDIO_USB_POST_CONNECT_WAIT_DELAY_MS	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:62	Number of extra milliseconds to wait when using PICO_STDIO_USB_CONNECT_WAIT_TIMEOUT_MS after a host CDC connection is detected (some host terminals seem to sometimes lose transmissions sent right after connection)			50		pico_stdio_usb		
PICO_STDIO_USB_RESET_BOOTSEL_ACTIVITY_LED	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:67	Optionally define a pin to use as bootloader activity LED when BOOTSEL mode is entered via USB (either VIA_BAUD_RATE or VIA_VENDOR_INTERFACE)	int				pico_stdio_usb	29	0
PICO_STDIO_USB_RESET_BOOTSEL_FIXED_ACTIVITY_LED	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:69	Whether the pin specified by PICO_STDIO_USB_RESET_BOOTSEL_ACTIVITY_LED is fixed or can be modified by picotool over the VENDOR USB interface	bool		0		pico_stdio_usb		
PICO_STDIO_USB_RESET_BOOTSEL_INTERFACE_DISABLE_MASK	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:75	Optionally disable either the mass storage interface (bit 0) or the PICOBOOT interface (bit 1) when entering BOOTSEL mode via USB (either VIA_BAUD_RATE or VIA_VENDOR_INTERFACE)	int		0		pico_stdio_usb	3	0
PICO_STDIO_USB_RESET_INTERFACE_SUPPORT_RESET_TO_BOOTSEL	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:85	If vendor reset interface is included allow rebooting to BOOTSEL mode	bool		1		pico_stdio_usb		
PICO_STDIO_USB_RESET_INTERFACE_SUPPORT_RESET_TO_FLASH_BOOT	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:90	If vendor reset interface is included allow rebooting with regular flash boot	bool		1		pico_stdio_usb		
PICO_STDIO_USB_RESET_MAGIC_BAUD_RATE	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:52	baud rate that if selected causes a reset into BOOTSEL mode (if PICO_STDIO_USB_ENABLE_RESET_VIA_BAUD_RATE is set)			1200		pico_stdio_usb		
PICO_STDIO_USB_RESET_RESET_TO_FLASH_DELAY_MS	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:95	delays in ms before rebooting via regular flash boot			100		pico_stdio_usb		
PICO_STDIO_USB_STDOUT_TIMEOUT_US	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:31	Number of microseconds to be blocked trying to write USB output before assuming the host has disappeared and discarding data			500000		pico_stdio_usb		
PICO_STDIO_USB_TASK_INTERVAL_US	src/rp2_common/pico_stdio_usb/include/pico/stdio_usb.h:37	Period of microseconds between calling tud_task in the background		true	1000		pico_stdio_usb		
PICO_STDOUT_MUTEX	src/rp2_common/pico_stdio/include/pico/stdio.h:19	Enable/disable mutex around stdout	bool		1		pico_stdio		
PICO_TIME_DEFAULT_ALARM_POOL_DISABLED	src/common/pico_time/include/pico/time.h:283	Disable the default alarm pool	bool	true	0		pico_time		
PICO_TIME_DEFAULT_ALARM_POOL_HARDWARE_ALARM_NUM	src/common/pico_time/include/pico/time.h:300	Select which HW alarm is used for the default alarm pool		true	3		pico_time	3	0
PICO_TIME_DEFAULT_ALARM_POOL_MAX_TIMERS	src/common/pico_time/include/pico/time.h:310	Selects the maximum number of concurrent timers in the default alarm pool		true	16		pico_time	255	0
PICO_TIME_SLEEP_OVERHEAD_ADJUST_US	src/common/pico_time/include/pico/time.h:37	How many microseconds to wake up early (and then busy_wait) to account for timer overhead when sleeping in low power mode	int		6		pico_time		
PICO_UART_DEFAULT_CRLF	src/rp2_common/hardware_uart/include/hardware/uart.h:28	Enable/disable CR/LF translation on UART	bool		0	PICO_UART_ENABLE_CRLF_SUPPORT	hardware_uart		
PICO_UART_ENABLE_CRLF_SUPPORT	src/rp2_common/hardware_uart/include/hardware/uart.h:23	Enable/disable CR/LF translation support	bool		1		hardware_uart		
PICO_USE_MALLOC_MUTEX	src/rp2_common/pico_malloc/include/pico/malloc.h:18	Whether to protect malloc etc with a mutex	bool		1 with pico_multicore, 0 otherwise		pico_malloc		
PICO_XOSC_STARTUP_DELAY_MULTIPLIER	src/rp2_common/hardware_xosc/include/hardware/xosc.h:16	Multiplier to lengthen xosc startup delay to accommodate slow-starting oscillators	int		1		hardware_xosc		1
USB_DPRAM_MAX	src/rp2040/hardware_structs/include/hardware/structs/usb.h:57	Set amount of USB RAM used by USB system			4096		hardware_usb	4096	0
XOSC_MHZ	src/rp2040/hardware_regs/include/hardware/platform_defs.h:39	The crystal oscillator frequency in Mhz	int	true	12		hardware_base		
